GIA 프로젝트 서대리 지시문 (Phase 2-2, 과업 1)
작성일: 2025년 8월 22일 17:15 KST
작성자: 나실장 (GIA 프로젝트 매니저)
지시 대상: 서대리 (Lead Developer)
관련 문서: GIA 기반 개인 정보체계 구축 맞춤형 솔루션 설계 보고서 V1.1

🎯 과업 목표: 지식 그래프 및 인사이트 시스템 구축
과업 2에서 구축한 '의미 추출' 기능을 활용하여, 문서의 핵심 내용들을 상호 연결하고, 이를 바탕으로 AI 기반 인사이트를 자동 생성하는 시스템을 구축하는 것이 목표입니다. 이는 조대표님의 정보를 '지식'으로 전환하는 핵심 단계입니다.

🔧 사용할 기존 자산
notion_uploader_v2.py: 과업 2에서 개발한 LLM 기반 의미 추출 및 노션 업로드 스크립트.

Notion DB: 기존의 '임시 테스트용 DB'를 확장하여 사용합니다.

📋 핵심 개념: 지식 그래프 (Knowledge Graph)
지식 그래프란?: 문서에서 추출된 키워드, 인물, 기업과 같은 핵심 개체(Entity)들을 별도의 데이터베이스에 저장하고, 문서와 이 개체들을 관계형 속성으로 연결하는 구조를 의미합니다.

목표: 단순한 리스트를 넘어, 정보 간의 복잡한 연결 관계를 시각적으로 파악하고, 이를 통해 AI가 '창의적 연결'을 도출할 수 있는 기반을 마련합니다.

📋 서대리 의견 반영 사항
서대리의 질문과 건의사항을 검토한 결과, 아래와 같이 지시 사항을 명확히 합니다.

노팀장 협의 방식:

별도 채팅창을 활용하여 노팀장에게 DB 구조 설계에 대한 기술 자문을 요청하세요. 협의가 완료되면, 핵심 내용을 메인 채팅창에 요약하여 공유해 주세요.

개체 유형 범위:

'등'에 포함될 수 있는 추가 유형: 이벤트, 위험, 정책, 기술, 프로젝트 등을 포함합니다. 노팀장과 협의하여 최종 유형을 확정해 주세요.

인사이트 생성 기준:

LLM 프롬프트 설계 기준: "숨겨진 인사이트를 찾아줘"와 같은 추상적인 프롬프트 대신, "A 기업과 B 정책 간의 연관성을 분석하고, 이로 인해 발생할 수 있는 잠재적 위험/기회를 50자 이내로 요약해 줘"와 같이 구체적이고 측정 가능한 프롬프트를 설계하세요.

개발 우선순위 및 테스트 전략:

서대리의 제안을 수용하여, 안정성 확보 → DB 구조 설계 → 기능 구현 → 테스트의 단계별 개발 우선순위를 따르세요.

시뮬레이션과 실제 테스트를 병행하는 방식을 채택합니다.

📝 작업 순서 (업데이트)
Phase 1: DB 구조 설계 및 협의 (노팀장과 협업)

노팀장 기술 자문 요청: 별도 채팅창을 통해 노팀장에게 '개체 정보 DB'의 속성 설계 및 관계형 연결 방안에 대해 자문을 요청하세요.

'개체 정보 DB' 생성: 노션의 GIA_INFOSYS 워크스페이스에 **'개체 정보 DB'**라는 새로운 데이터베이스를 생성하세요.

DB 속성 설계: 이 DB에는 이름 (Title), 유형 (Select: 인물, 기업, 기술, 정책 등), 관련 문서 (Relation) 등의 속성을 포함하세요.

Phase 2: 스크립트 기능 고도화 (서대리 주도)

notion_uploader_v2.py 스크립트를 수정하여, 추출된 핵심 키워드와 관련 인물을 '개체 정보 DB'에 자동으로 생성하거나 연결하는 로직을 추가하세요.

노션의 Rollup 기능을 활용하여 '개체 정보 DB'에서 해당 인물/기업과 관련된 문서의 개수를 자동으로 집계하는 기능을 구현하세요.

LLM API를 호출하여, '개체 정보 DB'에 있는 여러 문서들을 기반으로 '창의적 연결' 또는 **'숨겨진 인사이트'**를 도출하는 기능을 개발하세요.

Phase 3: 통합 테스트 및 보고 (서대리 주도)

개발된 스크립트를 사용하여 샘플 문서들을 노션에 업로드하고, '임시 테스트용 DB'와 '개체 정보 DB'가 정상적으로 연결되는지 확인하세요.

LLM이 '창의적 연결'을 성공적으로 도출하는지 테스트하세요.

이 과업 완료 후, **개발 경과 보고서**를 작성하여 나실장에게 제출해주세요.

🚫 절대 금지사항
노팀장과 협의 없이 Notion DB의 속성명이나 구조를 임의로 변경하지 마세요.

기존 notion_uploader_v2.py 스크립트의 핵심 기능(문서 파싱, LLM 의미 추출)을 훼손하지 마세요.

✅ 성공 기준
노션에 '개체 정보 DB'가 성공적으로 생성되는 것을 확인하세요.

notion_uploader_v2.py 스크립트가 실행될 때, 문서의 핵심 개체들이 '개체 정보 DB'에 자동으로 연결되는 것을 확인하세요.

개발된 스크립트가 연결된 데이터들을 기반으로 유의미한 인사이트를 생성하는 것을 확인하세요.

이 과업 완료 후, **개발 경과 보고서**를 작성하여 나실장에게 제출해주세요.